//
//  DownLoadController.m
//  MoveSchool
//
//  Created by edz on 2017/9/22.
//
//

#import "DownLoadController.h"
#import "DownLoadCell.h"
#import "ChapterModel.h"
#import "DWDownloader.h"
#import "DWDownloadItem.h"
#import "DWDownloadItemTool.h"
#import "DownLoadModel.h"
#import "MJExtension.h"

@interface DownLoadController ()<UITableViewDelegate, UITableViewDataSource, DownLoadCellDelegate>

@property (nonatomic, strong) UIButton *selectedButton;

@property (nonatomic, strong) NSMutableArray *cellArray;

@property (nonatomic, strong) UIButton *allSelBtn;

@property (nonatomic, strong) UIButton *deleBtn;

@property (nonatomic, strong) DWDownloader *downloader;

@property (nonatomic, strong) UITableView *tableview;

@end

@implementation DownLoadController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.cellArray = [NSMutableArray array];
    
    self.title = @"选择下载章节";
    
    UIView *topView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, 45)];
    topView.backgroundColor = [UIColor whiteColor];
    
    NSArray *titles = @[@"标准",@"高清",@"超清"];
    
    for (int i = 0 ; i < 3; i ++) {
        UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 40, 20)];
        [button addTarget:self action:@selector(buttonClick:) forControlEvents:UIControlEventTouchUpInside];
        [button setTitle:titles[i] forState:UIControlStateNormal];
        button.titleLabel.font = [UIFont systemFontOfSize:ys_f24];
        [button setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
        [button setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
        button.titleLabel.textAlignment = NSTextAlignmentCenter;
        button.x = 15 + i * (25 + 35);
        button.centerY = topView.height * 0.5;
        button.layer.cornerRadius = fillet;
        button.layer.masksToBounds = YES;
        button.layer.borderColor = AuxiliaryColor.CGColor;
        button.layer.borderWidth = 0.5;
        [topView addSubview:button];
        
        if (i == 0) {
            [self buttonClick:button];
        }
    }
    
//    [self.view addSubview:topView];
    
    //章节
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, self.view.height - 50 - 64)];
    self.tableview = tableView;
    tableView.delegate = self;
    tableView.dataSource = self;
    [self.view addSubview:tableView];
    tableView.tableFooterView = [[UIView alloc] init];
    
    //
    UIView *downloadView = [[UIView alloc]initWithFrame:CGRectMake(0, self.view.height - 50 - 64, self.view.width, 50)];
    [self.view addSubview: downloadView];
    
    UIButton *allSelBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, downloadView.width / 2, downloadView.height)];
    self.allSelBtn = allSelBtn;
    [allSelBtn setTitle:@"全选" forState:UIControlStateNormal];
    [allSelBtn setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
    allSelBtn.titleLabel.font = [UIFont systemFontOfSize:ys_f24];
    [allSelBtn addTarget:self action:@selector(allSelBtnC:) forControlEvents:UIControlEventTouchUpInside];
    [downloadView addSubview:allSelBtn];
    
    UIButton *deleBtn = [[UIButton alloc]initWithFrame:CGRectMake(downloadView.width / 2, 0, downloadView.width / 2, downloadView.height)];
    self.deleBtn = deleBtn;
    [deleBtn setTitle:@"下载" forState:UIControlStateNormal];
    [deleBtn setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
    [deleBtn addTarget:self action:@selector(deleBtnC:) forControlEvents:UIControlEventTouchUpInside];
    deleBtn.titleLabel.font = [UIFont systemFontOfSize:ys_f24];
    [downloadView addSubview:deleBtn];
    
    UIView *sepaView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 0.5, mainSpacing)];
    sepaView.backgroundColor = AuxiliaryColor;
    sepaView.centerX = downloadView.width * 0.5;
    sepaView.centerY = downloadView.height * 0.5;
    [downloadView addSubview:sepaView];
}

- (void) deleBtnC : (UIButton *) button
{
    
    NSMutableArray *selectedArray = [NSMutableArray array];
    //计算出有多少个选中的
    for (ChapterModel *model in self.titles) {
        if (model.buttonIsSelected) {
            [selectedArray addObject:model];
        }
    }
    
    NSMutableArray *urls = [NSMutableArray array];

    __weak __typeof(self)weakSelf = self;

    for (int i = 0 ; i < selectedArray.count; i ++) {
        
        ChapterModel *model = selectedArray[i];
        
        self.downloader = [[DWDownloader alloc] initWithUserId:DWACCOUNT_USERID
                                                    andVideoId:model.ccid
                                                           key:DWACCOUNT_APIKEY];
        
        [self.downloader getPlayInfo];
        self.downloader.getPlayinfoBlock =^(NSDictionary *playUrls){
            
            NSDictionary *playInfo = playUrls;
            NSArray *modes = [DownLoadModel objectArrayWithKeyValuesArray:playInfo[@"definitions"]];
            DownLoadModel *firstMoel = [modes firstObject];
            firstMoel.ccid = model.ccid;
            firstMoel.chapterTitle = model.chapterTitle;
            firstMoel.courseid = model.courseid;
            [urls addObject:firstMoel];
            
            if (urls.count == selectedArray.count) {
                [weakSelf downWithUrl : urls];
            }
        };
        
        self.downloader.failBlock = ^(NSError *error){
            NSLog(@"error = %@",error);
        };
    }
    
}

- (NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.titles.count;
}

- (UITableViewCell *) tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *ID = @"DownLoadCell";
    DownLoadCell *cell = [tableView dequeueReusableCellWithIdentifier:ID];
    if (cell == nil) {
        cell = [[DownLoadCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:ID];
    }
    cell.delegate = self;
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    [cell.chapter setTitle:[NSString stringWithFormat:@"第%ld章",(long)indexPath.row + 1] forState:UIControlStateNormal];
    ChapterModel *model = self.titles[indexPath.row];
    cell.title = model.chapterTitle;
    [self.cellArray addObject:cell];
    cell.model = model;
    return cell;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    [self.navigationController setNavigationBarHidden:NO animated:NO];
    self.navigationController.navigationBar.translucent = NO;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{

    ChapterModel *model = self.titles[indexPath.row];
    model.buttonIsSelected = YES;
    
    DownLoadCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    cell.selectButton.selected = !cell.selectButton.selected;
    
    BOOL hasSelected = NO;
    for (DownLoadCell *cell in self.cellArray) {
        if (cell.selectButton.selected) {
            hasSelected = YES;
            break;
        }
    }
    
    if (hasSelected) {
        [self.deleBtn setTitleColor:MainColor forState:UIControlStateNormal];
    }else
    {
        [self.deleBtn setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
    }
}

- (void) buttonClick : (UIButton *) button
{
    if (button == self.selectedButton) {
        return;
    }
    
    button.selected = YES;
    self.selectedButton.selected = NO;
    self.selectedButton.backgroundColor = [UIColor whiteColor];
    self.selectedButton.layer.borderColor = AuxiliaryColor.CGColor;
    self.selectedButton = button;

    if (button.selected) {
        button.layer.borderColor = [UIColor clearColor].CGColor;
        button.backgroundColor = MainColor;
    }else
    {
        button.layer.borderColor = AuxiliaryColor.CGColor;
        button.backgroundColor = [UIColor whiteColor];
    }
}

- (void) allSelBtnC : (UIButton *) button
{

    if (self.cellArray.count > 0) {
        for (DownLoadCell *cell in self.cellArray) {
            if ([button.titleLabel.text isEqualToString:@"全选"]) {
                cell.selectButton.selected = YES;

                NSIndexPath *indexPath = [self.tableview indexPathForCell:cell];
                ChapterModel *model = self.titles[indexPath.row];
                model.buttonIsSelected = YES;
            }else
            {
                cell.selectButton.selected = NO;
                
                NSIndexPath *indexPath = [self.tableview indexPathForCell:cell];
                ChapterModel *model = self.titles[indexPath.row];
                model.buttonIsSelected = NO;
            }
        }
    }
    
    if ([button.titleLabel.text isEqualToString:@"全选"]) {
        [self.deleBtn setTitleColor:MainColor forState:UIControlStateNormal];
        [self.allSelBtn setTitle:@"取消全选" forState:UIControlStateNormal];
    }else
    {
        [self.deleBtn setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
        [self.allSelBtn setTitle:@"全选" forState:UIControlStateNormal];
    }

}

- (void)downLoadCellClick:(DownLoadCell *)cell selected:(BOOL)selected
{
    BOOL hasSelected = NO;
    for (DownLoadCell *cell in self.cellArray) {
        if (cell.selectButton.selected) {
            hasSelected = YES;
            break;
        }
    }
    
    if (hasSelected) {
        [self.deleBtn setTitleColor:MainColor forState:UIControlStateNormal];
    }else
    {
        [self.deleBtn setTitleColor:AuxiliaryColor forState:UIControlStateNormal];
    }
    
    NSIndexPath *indexPath = [self.tableview indexPathForCell:cell];
    ChapterModel *model = self.titles[indexPath.row];
    model.buttonIsSelected = selected;
    
}

#pragma mark 下载
- (void) downWithUrl : (NSArray *) urls
{

    [MBProgressHUD showSuccess:@"正在下载，请稍后"];

    for (DownLoadModel *model in urls) {
        
        NSString *definition = model.definition;
        NSString *playurl = model.playurl;
        
        // 开始下载
        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
        NSString *documentDirectory = [paths objectAtIndex:0];
        
        NSString *videoPath = [NSString stringWithFormat:@"%@/%@-%@.mp4", documentDirectory, model.ccid, definition];
        
        DWDownloader *downloader = [[DWDownloader alloc] initWithUserId:DWACCOUNT_USERID andVideoId:model.ccid key:DWACCOUNT_APIKEY
                                                        destinationPath:videoPath];
        downloader.timeoutSeconds = 60;
        
        downloader.finishBlock = ^() {
            
            DWDownloadItem *item = [[DWDownloadItem alloc] init];
            item.videoId = model.ccid;
            item.format = self.format;
            item.image = self.image;
            item.chapterid = model.courseid;
            item.title = model.chapterTitle;
            
            item.size = [NSString stringWithFormat:@"%0.1fM",(long)downloader.remoteFileSize/1024.0/1024.0];
            item.videoPath = videoPath;
            item.name = [NSString stringWithFormat:@"%@-%@.mp4",model.courseid,definition];
            
            [DWDownloadItemTool saveDWDownloadItem:item];
            
        };
        
        [downloader startWithUrlString:playurl];
    }
    
    [self.navigationController popViewControllerAnimated:YES];
}

@end
