//
//  CreateVideoCourseController.m
//  MoveSchool
//
//  Created by edz on 2017/12/16.
//
//

#import "CreateVideoCourseController.h"
#import "TBCityIconFont.h"
#import "AddMusicController.h"
#import "AERecorder.h"
#import "AEAudioFilePlayer.h"
#import "TopImageButton.h"
#import "DWTools.h"

// 保存的录音文件名字
static NSString *ch1RecorderFileName = @"ch1Recording.m4a";

@interface CreateVideoCourseController ()<AddMusicControllerDelgate>{
    dispatch_source_t timer;
}

@property (nonatomic, strong) AERecorder *recorder;

@property (nonatomic, strong) AEAudioController *audioController;

@property (nonatomic, strong) AEAudioFilePlayer *selectedSongCH1Player;

@property (nonatomic, strong) UIButton *addButton;

@property (nonatomic, strong) UIView *musicContentView;

@property (nonatomic, strong) UILabel *timeLabel;

@property (strong, nonatomic) UISlider *durationSlider;

@property (strong, nonatomic) UISlider *recordDurationSlider;

@property (nonatomic, strong) UILabel *startLabel;

@property (nonatomic,assign) int timeCount;

@property (nonatomic, strong) UIView *footView;

@property (nonatomic, strong) UILabel *endTime;

@property (nonatomic, strong) UILabel *startTime;

@property (nonatomic, strong) UIView *recordTime;

@property (nonatomic, strong) NSTimer *playTimer;

@end

@implementation CreateVideoCourseController

- (void)viewWillAppear:(BOOL)animated{
    
    // Called when the view is about to made visible. Default does nothing
    [super viewWillAppear:animated];
    
    UINavigationBar *navigationBar = self.navigationController.navigationBar;
    // bg.png为自己ps出来的想要的背景颜色。
    [navigationBar setBackgroundImage:[UIImage createImageWithColor:MainColor]
                       forBarPosition:UIBarPositionAny
                           barMetrics:UIBarMetricsDefault];
    [navigationBar setShadowImage:[UIImage new]];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.title = @"录音";
    
    UIImageView *headerView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, 300)];
    headerView.image = [UIImage imageNamed:@"bg"];
    [self.view addSubview:headerView];
    
    UIImageView *timeView = [[UIImageView alloc] initWithFrame:CGRectMake(0, mainSpacing15, 165, 165)];
    timeView.centerX = self.view.width * 0.5;
    timeView.image = [UIImage imageNamed:@"t_bg"];
    [headerView addSubview:timeView];
    
    UILabel *timeLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, timeView.width, 44)];
    self.timeLabel = timeLabel;
    timeLabel.centerY = timeView.height * 0.5;
    timeLabel.text = @"00:00:00";
    timeLabel.textColor = [UIColor whiteColor];
    timeLabel.textAlignment = NSTextAlignmentCenter;
    timeLabel.font = [UIFont systemFontOfSize:22];
    [timeView addSubview:timeLabel];
    
    UIButton *addButton = [[UIButton alloc] initWithFrame:CGRectMake(mainSpacing15, headerView.height - 45 - 25, self.view.width - mainSpacing15 * 2, 45)];
    self.addButton = addButton;
    [addButton addTarget:self action:@selector(addButtonClick) forControlEvents:UIControlEventTouchUpInside];
    [addButton setTitle:@"添加背景音乐" forState:UIControlStateNormal];
    [addButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    addButton.titleLabel.font = [UIFont systemFontOfSize:ys_28];
    [headerView addSubview:addButton];
    
    //歌曲内容
    UIView *musicContentView = [[UIView alloc] initWithFrame:CGRectMake(mainSpacing15, headerView.height - 90 - mainSpacing15, addButton.width, 90)];
    musicContentView.layer.borderColor = MainColor.CGColor;
    musicContentView.layer.borderWidth = 0.5;
    musicContentView.layer.cornerRadius = fillet;
    musicContentView.layer.masksToBounds = YES;
    musicContentView.hidden = YES;
    self.musicContentView = musicContentView;
    
    UIButton *changeMusic = [[UIButton alloc] initWithFrame:CGRectMake(musicContentView.width - 64 - 5, mainSpacing, 64, 17)];
    [changeMusic addTarget:self action:@selector(addButtonClick) forControlEvents:UIControlEventTouchUpInside];
    changeMusic.backgroundColor = [UIColor whiteColor];
    changeMusic.layer.cornerRadius = 8.5;
    changeMusic.layer.masksToBounds = YES;
    [changeMusic setTitle:@"更换音乐" forState:UIControlStateNormal];
    changeMusic.titleLabel.font = [UIFont systemFontOfSize:ys_f24];
    [changeMusic setTitleColor:MainColor forState:UIControlStateNormal];
    [musicContentView addSubview:changeMusic];
    
    UIButton *openMusic = [[UIButton alloc] initWithFrame:CGRectMake(changeMusic.x - 100 - mainSpacing, 0, 100, 17)];
    openMusic.centerY = changeMusic.centerY;
    openMusic.titleEdgeInsets = UIEdgeInsetsMake(0, mainSpacing, 0, 0);
    [openMusic setTitle:@"已开启音乐" forState:UIControlStateNormal];
    openMusic.titleLabel.font = [UIFont systemFontOfSize:ys_f24];
    [openMusic setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [openMusic setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@"\U0000e625", ys_f24, [UIColor whiteColor])] forState:UIControlStateSelected];
    [openMusic setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@"\U0000e624", ys_f24, [UIColor whiteColor])] forState:UIControlStateNormal];
    [musicContentView addSubview:openMusic];
    
    UILabel *nameLabel = [[UILabel alloc] initWithFrame:CGRectMake(mainSpacing, CGRectGetMaxY(openMusic.frame) + 5, musicContentView.width - 2 * mainSpacing, 20)];
    nameLabel.text = @"童话镇";
    nameLabel.textColor = [UIColor whiteColor];
    nameLabel.font = [UIFont systemFontOfSize:ys_28];
    [musicContentView addSubview:nameLabel];
    
    //滑动条
    self.durationSlider = [[UISlider alloc] initWithFrame:CGRectMake(nameLabel.x, CGRectGetMaxY(nameLabel.frame), nameLabel.width , 20)];
    [self.durationSlider addTarget:self action:@selector(durationSliderChange:) forControlEvents:UIControlEventValueChanged];
    [self.durationSlider setThumbImage:[UIImage imageNamed:@"kc_jindutiao"] forState:UIControlStateNormal];
    [self.durationSlider setThumbImage:[UIImage imageNamed:@"kc_jindutiao-yuandian"] forState:UIControlStateHighlighted];
    headerView.userInteractionEnabled = YES;
    musicContentView.userInteractionEnabled = YES;
    [musicContentView addSubview:self.durationSlider];
    
    [self.durationSlider setMinimumTrackTintColor:RGBCOLOR(255,185,147)];
    [self.durationSlider setMaximumTrackTintColor:RGBCOLOR(255,185,147)];
    [self durationSlidersetting];
    
    //音量+
    UILabel *musicAdd = [[UILabel alloc] initWithFrame:CGRectMake(self.durationSlider.x, CGRectGetMaxY(self.durationSlider.frame), 0, 0)];
    musicAdd.text = @"音量-";
    musicAdd.textColor = [UIColor whiteColor];
    musicAdd.font = [UIFont systemFontOfSize:ys_f20];
    [musicAdd sizeToFit];
    [musicContentView addSubview:musicAdd];
    
    //音量+
    UILabel *musicDe = [[UILabel alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(self.durationSlider.frame), 0, 0)];
    musicDe.text = @"音量+";
    musicDe.textColor = [UIColor whiteColor];
    musicDe.font = [UIFont systemFontOfSize:ys_f20];
    [musicDe sizeToFit];
    musicDe.x = CGRectGetMaxX(self.durationSlider.frame) - musicDe.width;
    [musicContentView addSubview:musicDe];
    
    [headerView addSubview:musicContentView];
    
    
    self.audioController = [[AEAudioController alloc] initWithAudioDescription:AEAudioStreamBasicDescriptionNonInterleavedFloatStereo inputEnabled:YES];
    _audioController.preferredBufferDuration = 0.005;
    _audioController.useMeasurementMode = YES;
    [_audioController start:NULL];
    
    // 实例化AERecorder对象
    _recorder = [[AERecorder alloc] initWithAudioController:_audioController];
    
    _timeCount = 0;
    
    //按住说话
    UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 79, 79)];
    [button setImage:[UIImage imageNamed:@"luyin"] forState:UIControlStateNormal];
    button.centerY = (self.view.height - CGRectGetMaxY(headerView.frame)) * 0.5 + CGRectGetMaxY(headerView.frame) - 64;
    [button addTarget:self action:@selector(buttonClick:) forControlEvents:UIControlEventTouchUpInside];
    button.centerX = self.view.width * 0.5;
    [button setImage:[UIImage imageNamed:@"shiting"] forState:UIControlStateSelected];
    button.titleLabel.textColor = AuxiliaryColor;
    [self.view addSubview:button];
    
    UILabel *startLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, CGRectGetMaxY(button.frame), button.width, 30)];
    self.startLabel = startLabel;
    startLabel.textAlignment = NSTextAlignmentCenter;
    startLabel.centerX = button.centerX;
    startLabel.text = @"开始录音";
    startLabel.textColor = AuxiliaryColor;
    startLabel.font = [UIFont systemFontOfSize:ys_f24];
    [self.view addSubview:startLabel];
    
    NSArray *buttonTitles = @[@"试听",@"重录",@"裁剪",@"保存"];
    
    //底部菜单
    UIView *footView = [[UIView alloc] initWithFrame:CGRectMake(0, self.view.height - 44 - 64, self.view.width, 44)];
    self.footView = footView;
    UIView *sepaView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, footView.width, 0.5)];
    sepaView.backgroundColor = SepaViewColor;
    [footView addSubview:sepaView];
    footView.hidden = YES;
    for (int i = 0 ; i < buttonTitles.count; i ++) {
        UIButton *button = [[UIButton alloc] initWithFrame:CGRectMake(0, 0.5, footView.width * 0.25, footView.height)];
        button.tag = i;
        [button addTarget:self action:@selector(footButtonClick:) forControlEvents:UIControlEventTouchUpInside];
        [button setTitleColor:MainTextColor forState:UIControlStateNormal];
        button.x = button.width * i;
        [button setTitle:buttonTitles[i] forState:UIControlStateNormal];
        button.titleLabel.font = [UIFont systemFontOfSize:ys_28];
        [footView addSubview:button];
        
        if (i != 0) {
            UIView *sepaView = [[UIView alloc] initWithFrame:CGRectMake(i * button.width, 0, 0.5, footView.height - 2 * mainSpacing15)];
            sepaView.backgroundColor = SepaViewColor;
            sepaView.centerY = footView.height * 0.5;
            [footView addSubview:sepaView];
            
        }
    }
    [self.view addSubview:footView];
    
    //录音时长
    UIView *recordTime = [[UIView alloc] initWithFrame:CGRectMake(mainSpacing15, CGRectGetMaxY(headerView.frame) + mainSpacing15, self.view.width - 2 * mainSpacing15, 44)];
    recordTime.hidden = YES;
    self.recordTime = recordTime;
    recordTime.layer.cornerRadius = 2.5;
    recordTime.layer.masksToBounds = YES;
    recordTime.backgroundColor = SepaViewColor;
    [self.view addSubview:recordTime];
    
    //滑动条
    UISlider *durationSlider = [[UISlider alloc] initWithFrame:CGRectMake(mainSpacing15, 5, recordTime.width - 2 * mainSpacing15, 20)];
    self.recordDurationSlider = durationSlider;
    [durationSlider addTarget:self action:@selector(durationSliderChange:) forControlEvents:UIControlEventValueChanged];
    [durationSlider setThumbImage:[UIImage imageNamed:@"kc_jindutiao-1"] forState:UIControlStateNormal];
    [durationSlider setThumbImage:[UIImage imageNamed:@"kc_jindutiao-1"] forState:UIControlStateHighlighted];
    headerView.userInteractionEnabled = YES;
    musicContentView.userInteractionEnabled = YES;
    [recordTime addSubview:durationSlider];
    
    [durationSlider setMinimumTrackTintColor:MainColor];
    [durationSlider setMaximumTrackTintColor:RGBCOLOR(237,238,240)];
    
    UILabel *startTime = [[UILabel alloc] initWithFrame:CGRectMake(mainSpacing15, CGRectGetMaxY(durationSlider.frame), recordTime.width * 0.5, 10)];
    startTime.text = @"00:00:00";
    self.startTime = startTime;
    startTime.textColor = MainTextColor;
    startTime.font = [UIFont systemFontOfSize:ys_f24];
    [recordTime addSubview:startTime];
    
    UILabel *endTime = [[UILabel alloc] initWithFrame:CGRectMake(recordTime.width * 0.5, startTime.y, recordTime.width * 0.5 - mainSpacing15, 10)];
    self.endTime = endTime;
    endTime.textAlignment = NSTextAlignmentRight;
    endTime.font = [UIFont systemFontOfSize:ys_f24];
    endTime.textColor = MainTextColor;
    [recordTime addSubview:endTime];
}

#pragma mark 添加背景音乐
- (void) addButtonClick
{
    
    AddMusicController *vc = [[AddMusicController alloc] init];
    vc.addMusicControllerDelgate = self;
    [self.navigationController pushViewController:vc animated:YES];
}

- (void)addMusic
{
    self.addButton.hidden = YES;
    self.musicContentView.hidden = NO;
    
    NSString *filePath = [[NSBundle mainBundle] pathForResource:@"tonghua" ofType:@"mp3"];
    //文件名转换成url格式
    NSURL *url = [NSURL fileURLWithPath:filePath];
    _selectedSongCH1Player = [[AEAudioFilePlayer alloc] initWithURL:url error:nil];
    _selectedSongCH1Player.volume = 0.4;
    [_audioController addChannels:@[_selectedSongCH1Player]];
    
    
}

-(void)durationSlidersetting
{
    self.durationSlider.minimumValue = 0.0f;
    self.durationSlider.maximumValue = 1.0f;
    self.durationSlider.value = 0.4f;
    self.durationSlider.continuous = YES;
}

- (void) durationSliderChange : (UISlider *) slider
{
    _selectedSongCH1Player.volume = slider.value;
}

- (void) buttonClick : (UIButton *) button
{
    button.selected = !button.selected;
    
    if (button.selected) {
        if (_timeCount == 0) {
            self.startLabel.text = @"正在录音...";
            self.footView.hidden = NO;
            
            // 获取录制后文件存放的路径
            NSString *filePath = [self getFilePathWithFileName:ch1RecorderFileName];
            
            NSError *error = nil;
            if (![_recorder beginRecordingToFileAtPath:filePath fileType:kAudioFileM4AType error:&error]) {
                return;
            }
            
            // 同时录制输入及输出通道的声音(即既录人声,也录手机播放的声音)
            [_audioController addInputReceiver:_recorder];
            [_audioController addOutputReceiver:_recorder];
            
            [self creatTimer];
            
        }else
        {
            [self creatTimer];
            AERecorderStartRecording(_recorder);
        }
    }else
    {

        if (timer) {
            dispatch_source_cancel(timer); // 异步取消调度源
            timer = nil;
        }
        
        AERecorderStopRecording(_recorder);
    }
}

#pragma mark 及时
- (void) creatTimer
{
    dispatch_queue_t globalQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, globalQueue);
    //    每秒执行一次
    dispatch_source_set_timer(timer, dispatch_walltime(NULL, 0), 1.0*NSEC_PER_SEC, 0);
    dispatch_source_set_event_handler(timer, ^{
        int hours = _timeCount / 3600;
        int minutes = (_timeCount - (3600*hours)) / 60;
        int seconds = _timeCount%60;
        NSString *strTime = [NSString stringWithFormat:@"%.2d:%.2d:%.2d",hours,minutes,seconds];
        
        dispatch_async(dispatch_get_main_queue(), ^{
            //           ======在这根据自己的需求去刷新UI==============
            self.timeLabel.text = strTime;
        });
        _timeCount ++;
    });
    dispatch_resume(timer);

}

#pragma mark 停止录音
- (void) stopRecorder
{
    if (timer) {
        dispatch_source_cancel(timer); // 异步取消调度源
        timer = nil;
    }

    
    if (_recorder) {
        [_recorder finishRecording];
        [_audioController removeInputReceiver:_recorder];
        [_audioController removeOutputReceiver:_recorder];
        _recorder = nil;
    }
}

#pragma mark 停止
- (void)stopCH1Playthrough {
    if (_selectedSongCH1Player) {
        [_audioController removeChannels:@[_selectedSongCH1Player]];
        _selectedSongCH1Player = nil;
    }
}
#pragma mark Helper Method
- (NSString *)getFilePathWithFileName:(NSString *)fileName {
    NSString *documentsFolder = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject];
    NSString *filePath = [documentsFolder stringByAppendingPathComponent:fileName];
    return filePath;
}

#pragma mark - 播放录音
- (void)playRecordCH1 {
    // 通过文件名拿到文件路径
    NSString *filePath = [self getFilePathWithFileName:ch1RecorderFileName];
    
    // 如果文件不存在,结束
    if ( ![[NSFileManager defaultManager] fileExistsAtPath:filePath] ) {
        return;
    }
    
    NSError *error = nil;
    
    // 利用AEAudioFilePlayer对象进行播放
    _selectedSongCH1Player = [[AEAudioFilePlayer alloc] initWithURL:[NSURL fileURLWithPath:filePath] error:&error];
    if (!_selectedSongCH1Player) {
        [[[UIAlertView alloc] initWithTitle:@"Error"
                                    message:[NSString stringWithFormat:@"Couldn't start playback: %@", [error localizedDescription]]
                                   delegate:nil
                          cancelButtonTitle:nil
                          otherButtonTitles:@"OK", nil] show];
        return;
    }
    
    // 进行播放
    [_audioController addChannels:@[_selectedSongCH1Player]];
    
    __weak CreateVideoCourseController *weakSelf = self;
    
    _selectedSongCH1Player.completionBlock = ^{
        [weakSelf.playTimer invalidate];
        weakSelf.playTimer = nil;
    };
    
    self.recordDurationSlider.maximumValue = (int)_selectedSongCH1Player.duration;
    self.endTime.text = [DWTools formatSecondsToString:_selectedSongCH1Player.duration];
}

- (void) footButtonClick : (UIButton *) button
{
    
    [self stopRecorder];
    
    if (button.tag == 0) {
        self.startLabel.text = @"正在试听中，点击可暂停试听";
        [self addTimer];
        self.recordTime.hidden = NO;
        [self stopCH1Playthrough];
        [self playRecordCH1];
    }
}

- (void)addTimer
{
    self.playTimer = [NSTimer scheduledTimerWithTimeInterval:1.0f target:self selector:@selector(timerHandler) userInfo:nil repeats:YES];
}

- (void)timerHandler
{
    if ((int)_selectedSongCH1Player.currentTime + 1 <= _selectedSongCH1Player.duration) {
        self.recordDurationSlider.value = (int)_selectedSongCH1Player.currentTime + 1;
        self.startTime.text = [DWTools formatSecondsToString:_selectedSongCH1Player.currentTime + 1];
    }
}

@end
