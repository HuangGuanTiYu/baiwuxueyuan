//
//  MyMessageController.m
//  MoveSchool
//
//  Created by edz on 2017/7/26.
//
//

#import "MyMessageController.h"
#import "UIView+WZLBadge.h"
#import "AFNetWW.h"
#import "NewMessageModel.h"
#import "MJExtension.h"
#import "MessageTaskController.h"
#import "MessageNoticeController.h"
#import "MessageInteractionController.h"
#import "ExamineController.h"
#import "UIImage+TBCityIconFont.h"
#import "TBCityIconFont.h"
#import "MenusSubModel.h"

@interface MyMessageController ()<MessageTaskControllerDelegate, MessageNoticeControllerDelegate, MessageInteractionControllerDelegate>

@property (nonatomic, strong) UIView *redPotin;

@property (nonatomic, strong) UIView *examineView;

@property (nonatomic, strong) MessageTaskController *task;

@property (nonatomic, strong) MessageNoticeController *notice;

@property (nonatomic, strong) MessageInteractionController *interaction;

@end

@implementation MyMessageController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.title = @"消息中心";
    
    [self setUpUI];
    
    //设置buttonBarView属性 选中文字变大 文字颜色
    [self setButtonBarView];
    
    
    BOOL hasRole = NO;
    for (MenusSubModel *model in self.subs) {
        if (model.ID == MessageExamine) {
            if (self.examineView != nil) {
                hasRole = YES;
            }
        }
    }
    
    self.examineView.hidden = !hasRole;
    [self setHeightAndY:hasRole];
}

- (void) setData
{
    NSString *url = [NSString stringWithFormat:@"%@%@?token=%@",NetHeader,GetMsgRecordCount,[UserInfoTool getUserInfo].token];
    NSDictionary *Parameters=@{
                               };
    
    [[AFNetWW sharedAFNetWorking] AFWithPostORGet:@"post" withURLStr:url WithParameters:Parameters success:^(id responseDic) {
        
        NSNumber *code = responseDic[@"rescode"];
        if ([code intValue] == 10000) {
             NSArray *messages = [NewMessageModel objectArrayWithKeyValuesArray:responseDic[@"rows"]];
            if (messages.count > 0) {
                for (NewMessageModel *model in messages) {
                    if (model.msgrecordtype == 2 && model.count > 0) { //审核
                        self.redPotin.hidden = NO;
                    }else
                    {
                        if (model.count > 0) {
                            //设置红点
                            [self setPoint : model.msgtype];
                        }
                    }
                }
            }
        }
        
        
    } fail:^(NSError *error) {
        [MBProgressHUD showText:[ManyLanguageMag getTipStrWith:@"网络错误"] inview:self.view];
    }];
}

#pragma mark 设置高度和Y
- (void) setHeightAndY : (BOOL) hasRole
{
    self.buttonBarView.y = hasRole ? 65 : 0;
    
    [self.task setTableViewHeight:hasRole];
    
    [self.notice setTableViewHeight:hasRole];
    
    [self.interaction setTableViewHeight:hasRole];
    
}

#pragma mark 设置红点
- (void) setPoint : (int) msgType

{
    for (XLButtonBarViewCell *cell in self.buttonBarCellArray) {
        if (([cell.label.text isEqualToString:@"任务"] && msgType == 1) || ([cell.label.text isEqualToString:@"通知"] && msgType == 2) || ([cell.label.text isEqualToString:@"互动"] && msgType == 3)) {
            cell.label.badgeBgColor = [UIColor redColor];
            cell.label.badgeCenterOffset = CGPointMake(0, 0);
        }
    }
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    [self setData];
    
    [self.navigationController setNavigationBarHidden:NO animated:NO];
    self.navigationController.navigationBar.translucent = NO;
}

- (void) setUpUI
{
    //审核中心
    UIView *examineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, 55)];
    self.examineView = examineView;
    examineView.backgroundColor = [UIColor whiteColor];
    [examineView addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(examine)]];
    
    UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];
    button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentLeft;
    [button addTarget:self action:@selector(examine) forControlEvents:UIControlEventTouchUpInside];
    button.frame = CGRectMake(mainSpacing + 5, 0,examineView.width - 40, examineView.height);
    button.titleEdgeInsets = UIEdgeInsetsMake(0, 10, 0, 0);
    [self.view addSubview:button];
    [button setTitle:@"审核中心" forState:UIControlStateNormal];
    button.titleLabel.font = [UIFont systemFontOfSize:14];
    [button setTitleColor:RGBColor(48,48,48) forState:UIControlStateNormal];
    
    [button setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@"\U0000e613", 35, [UIColor redColor])] forState:UIControlStateNormal];
    [button setTintColor:GreenColor];
    [examineView addSubview:button];
    
    UIButton *nextButton = [[UIButton alloc] initWithFrame:CGRectMake(examineView.width - 20 - mainSpacing, 0, 20, examineView.height)];
    [nextButton setImage:[UIImage iconWithInfo:TBCityIconInfoMake(@"\U0000e614", 15, [UIColor grayColor])] forState:UIControlStateNormal];
    [examineView addSubview:nextButton];
    
    UIView *redPotin = [[UIView alloc] initWithFrame:CGRectMake(nextButton.x - 8, 0, 8, 8)];
    self.redPotin = redPotin;
    redPotin.hidden = YES;
    redPotin.layer.cornerRadius = 4;
    redPotin.layer.masksToBounds = YES;
    redPotin.centerY = examineView.height * 0.5;
    redPotin.backgroundColor = [UIColor redColor];
    [examineView addSubview:redPotin];

    [self.view addSubview:examineView];
    
    self.view.backgroundColor = RGBCOLOR(240, 240, 240);

}

- (void) setButtonBarView
{
    self.isProgressiveIndicator = YES;
    
    self.changeCurrentIndexProgressiveBlock = ^void(XLButtonBarViewCell *oldCell, XLButtonBarViewCell *newCell, CGFloat progressPercentage, BOOL changeCurrentIndex, BOOL animated){
        if (changeCurrentIndex) {
            [oldCell.label setTextColor:[UIColor grayColor]];
            [newCell.label setTextColor:GreenColor];
            
            if (animated) {
                [UIView animateWithDuration:0.1
                                 animations:^(){
                                     oldCell.label.font = [UIFont systemFontOfSize:14];
                                     newCell.label.font = [UIFont systemFontOfSize:14];
                                     
                                 }
                                 completion:nil];
            }
            else{
                oldCell.label.font = [UIFont systemFontOfSize:14];
                newCell.label.font = [UIFont systemFontOfSize:14];
            }
        }
    };
}

-(NSArray *)childViewControllersForPagerTabStripViewController:(XLPagerTabStripViewController *)pagerTabStripViewController
{
    self.buttonBarView.y = 65;
    self.buttonBarView.backgroundColor = [UIColor whiteColor];
    self.buttonBarView.shouldCellsFillAvailableWidth = YES;
    
    NSMutableArray *childVcArray = [NSMutableArray array];
    
    for (MenusSubModel *model in self.subs) {
        
        if (model.ID == MessageTask) {
            MessageTaskController *task = [[MessageTaskController alloc] init];
            self.task = task;
            task.delegate = self;
            [childVcArray addObject:task];
        }
        
        if (model.ID == MessageNotice) {
            MessageNoticeController *notice = [[MessageNoticeController alloc] init];
            self.notice = notice;
            notice.delegate = self;
            [childVcArray addObject:notice];
        }
        
        if (model.ID == MessageNotice) {
            MessageInteractionController *interaction = [[MessageInteractionController alloc] init];
            self.interaction = interaction;
            interaction.delegate = self;
            [childVcArray addObject:interaction];
        }
    }
    
    return childVcArray;
}

#pragma mark 审核中心
- (void) examine
{
    ExamineController *examine = [[ExamineController alloc] init];
    [self.navigationController pushViewController:examine animated:YES];
}

- (void)setRedTaskPoint:(int)count
{
    if (count > 0) {
        [self setPoint:1];
    }else
    {
        for (XLButtonBarViewCell *cell in self.buttonBarCellArray) {
            if ([cell.label.text isEqualToString:@"任务"]) {
                [cell.label clearBadge];
            }
        }
    }
}

- (void)setRedNoticePoint:(int)count
{
    if (count > 0) {
        [self setPoint:2];
    }else
    {
        for (XLButtonBarViewCell *cell in self.buttonBarCellArray) {
            if ([cell.label.text isEqualToString:@"通知"]) {
                [cell.label clearBadge];
            }
        }
    }
}

- (void)setRedInteractionPoint:(int)count
{
    if (count > 0) {
        [self setPoint:3];
    }else
    {
        for (XLButtonBarViewCell *cell in self.buttonBarCellArray) {
            if ([cell.label.text isEqualToString:@"互动"]) {
                [cell.label clearBadge];
            }
        }
    }
}

@end
